name: macOS Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x86_64, arm64]

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          brew update
          brew install autoconf automake libtool miniupnpc openssl pkg-config protobuf@21 \
                       qt5 zeromq qrencode librsvg boost berkeley-db@5 libevent create-dmg
          brew link protobuf@21

      - name: Set environment
        run: |
          BOOST_PREFIX=$(brew --prefix boost)
          OPENSSL_PREFIX=$(brew --prefix openssl)
          QT_PREFIX=$(brew --prefix qt5)

          echo "BOOST_ROOT=$BOOST_PREFIX" >> $GITHUB_ENV
          echo "BOOST_INCLUDEDIR=$BOOST_PREFIX/include" >> $GITHUB_ENV
          echo "BOOST_LIBRARYDIR=$BOOST_PREFIX/lib" >> $GITHUB_ENV
          echo "OPENSSL_ROOT=$OPENSSL_PREFIX" >> $GITHUB_ENV
          echo "CPPFLAGS=-I$BOOST_PREFIX/include -I$OPENSSL_PREFIX/include" >> $GITHUB_ENV
          echo "LDFLAGS=-L$BOOST_PREFIX/lib -L$OPENSSL_PREFIX/lib" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=$QT_PREFIX/lib/pkgconfig" >> $GITHUB_ENV
          echo "PATH=$QT_PREFIX/bin:$PATH" >> $GITHUB_ENV

      - name: Autogen
        run: ./autogen.sh

      - name: Configure
        run: |
          ./configure \
            --with-gui=qt5 \
            --with-boost=$BOOST_ROOT \
            --with-boost-libdir=$BOOST_LIBRARYDIR \
            --with-openssl=$OPENSSL_ROOT \
            PKG_CONFIG_PATH=$PKG_CONFIG_PATH \
            CPPFLAGS="$CPPFLAGS" \
            LDFLAGS="$LDFLAGS"

      - name: Build
        run: make -j$(sysctl -n hw.ncpu)

      - name: Upload flopcoind
        uses: actions/upload-artifact@v4
        with:
          name: flopcoind-${{ matrix.arch }}
          path: src/flopcoind

      - name: Upload flopcoin-qt
        uses: actions/upload-artifact@v4
        with:
          name: flopcoin-qt-${{ matrix.arch }}
          path: src/qt/flopcoin-qt

      - name: Create DMG (Qt GUI)
        run: |
          mkdir -p release
          cp src/qt/flopcoin-qt release/Flopcoin-Qt.app
          create-dmg \
            --volname "Flopcoin" \
            --window-size 500 300 \
            --icon-size 100 \
            --app-drop-link 300 200 \
            release/Flopcoin-Qt.dmg release/Flopcoin-Qt.app

      - name: Upload DMG
        uses: actions/upload-artifact@v4
        with:
          name: flopcoin-qt-dmg-${{ matrix.arch }}
          path: release/Flopcoin-Qt.dmg
